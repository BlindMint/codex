stages:
  - build
  - release

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

# Build the APK
build:
  stage: build
  image: cimg/android:2024.04
  script:
    - chmod +x ./gradlew
    - echo "$KEY_PASSWORD" | ./gradlew assembleRelease -PKEY_PASSWORD="$KEY_PASSWORD"
  artifacts:
    paths:
      - app/build/outputs/apk/release/app-release.apk
    expire_in: 1 week
  rules:
    - if: $CI_COMMIT_TAG

# Release Job
create_release:
  stage: release
  image: cimg/base:2024.04
  needs:
    - job: build
      artifacts: true
  rules:
    - if: $CI_COMMIT_TAG
  before_script:
    - apt-get update -qq && apt-get install -yq glab jq curl
    - |
      if [ -n "$GITLAB_PAT" ]; then
        echo "$GITLAB_PAT" | glab auth login --stdin --token-stdin
      else
        glab auth status || echo "Using default job token"
      fi
  script:
    # Generate checksum (simple strings)
    - sha256sum app/build/outputs/apk/release/app-release.apk > app/build/outputs/apk/release/app-release.sha256
    - APK_SHA=$(sha256sum app/build/outputs/apk/release/app-release.apk | cut -d' ' -f1)
    
    # Generate changelog (literal block - safe flat strings)
    - |
      PREV_TAG=$(git describe --tags --abbrev=0 "$(git rev-list --tags --max-count=2 | tail -n1)" 2>/dev/null || echo "HEAD")
      CHANGELOG=$(git log --pretty=format:"- %s (by %an on %ar)" "$PREV_TAG"..HEAD --max-count=10 2>/dev/null || echo "Initial release - no prior commits.")
    
    # Define release description using heredoc (string-only, no printf nesting)
    - |
      cat << EOF > release_notes.md
      Automated Android release for Codex app.

      ## Changelog
      $CHANGELOG

      ## Download
      - APK: app-release.apk (SHA256: $APK_SHA)
      - Install: Enable 'Unknown sources' in Android settings.
      - Full notes: See [compare]($PREV_TAG...$CI_COMMIT_TAG)

      Generated by GitLab CI.
      EOF
      RELEASE_DESCRIPTION=$(cat release_notes.md)

    # Create release (simple continued command)
    - |
      glab release create \
        --tag "$CI_COMMIT_TAG" \
        --title "Release $CI_COMMIT_TAG" \
        --description "$RELEASE_DESCRIPTION" \
        --draft false \
        --prerelease false
    
    # Upload files (simple strings)
    - glab release upload "$CI_COMMIT_TAG" "app/build/outputs/apk/release/app-release.apk" --name "app-release.apk"
    - glab release upload "$CI_COMMIT_TAG" "app/build/outputs/apk/release/app-release.sha256" --name "app-release.sha256"
    - echo "Release created at: https://gitlab.com/BlindMint/codex/-/releases/$CI_COMMIT_TAG"
    # Clean up temp file
    - rm -f release_notes.md
  after_script:
    - echo "Pipeline complete."
  when: on_success